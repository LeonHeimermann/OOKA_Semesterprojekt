version: '3.8'

services:
  service-registry:
    build:
      context: ./service-registry/
      dockerfile: Dockerfile
    image: service-registry
    networks:
      - ooka-network
    ports:
      - "8761:8761"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761" ]
      interval: 10s
      timeout: 3s
      retries: 6
      start_period: 20s
  bff-service:
    build:
      context: ./bff-service/
      dockerfile: Dockerfile
    image: bff-service
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - ooka-network
    ports:
      - "8085:8085"
  ms-auxiliary-systems:
    build:
      context: ./ms-auxiliary-systems/
      dockerfile: Dockerfile
    image: ms-auxiliary-systems
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - ooka-network
    ports:
      - "8080:8080"
  ms-control-systems:
    build:
      context: ./ms-control-systems/
      dockerfile: Dockerfile
    image: ms-control-systems
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - ooka-network
    ports:
      - "8081:8081"
  ms-engine-systems:
    build:
      context: ./ms-engine-systems/
      dockerfile: Dockerfile
    image: ms-engine-systems
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - ooka-network
    ports:
      - "8082:8082"
  ms-mounting-systems:
    build:
      context: ./ms-mounting-systems/
      dockerfile: Dockerfile
    image: ms-mounting-systems
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - ooka-network
    ports:
      - "8083:8083"
  ms-power-transmission:
    build:
      context: ./ms-power-transmission/
      dockerfile: Dockerfile
    image: ms-power-transmission
    depends_on:
      service-registry:
        condition: service_healthy
    networks:
      - ooka-network
    ports:
      - "8084:8084"
  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    image: ooka_frontend
    networks:
      - ooka-network
    ports:
      - "3000:3000"
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - ooka-network
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - ooka-network
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ooka-network
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - ooka-network

networks:
  ooka-network:
    driver: bridge
    name: ooka-network
